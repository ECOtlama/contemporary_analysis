
20/06/2017
# ACTUALIZACIÓN

Había calculado mal las reads esperadas al asumir un merge completo. Pero realmente sí nos habían dado lo que queríamos, solo que habían añadido también las lecturas de estas mismas muestras del proyecto LYNX_14.

01/06/2017
# PROBLEMA CON LAS MUSTRAS HISTÓRICAS:

A raiz de intentar hacer el merge, me acabo de dar cuenta que cuando nos han dado las muestras LYNX_17 nos han incluido tanto en los fastq como en los estadisticos las muestras de LYNX_14:
Para comprobarlo hago la siguiente prueba con una muestra al azar:

WG-Seq	AC4082	AC4082
sample=h_lp_mt_1025

--------------------------------------------------

LYNX_17: 

What they say:
178039000

Empirical ONLY with the new lanes for that sample:  

	ARRAY=(CALHGANXX_6_LYNX7-706ii5-4 CALHGANXX_7_LYNX7-706ii5-4 CALHGANXX_8_LYNX7-706ii5-4)
	for i in ${ARRAY[@]}
	do
	echo $i
	zcat ${i}_1.fastq.gz | wc -l | awk '{print $1/4}' > ${BARCODEID["${i}"]}_${i}.borrar1.rawseq
	zcat ${i}_2.fastq.gz | wc -l | awk '{print $1/4}' > ${BARCODEID["${i}"]}_${i}.borrar2.rawseq
	done
	cat "${sample}"*.borrar1.rawseq | awk '{sum+=$1}END{print sum}' > "${sample}"_R1.rawseq
	cat "${sample}"*.borrar2.rawseq | awk '{sum+=$1}END{print sum}' > "${sample}"_R2.rawseq

41251016

Empirical with all the lanes for that sample:

ARRAY=(C9KH6ANXX_5_LYNX7-706ii5-4 C9KN6ANXX_7_LYNX7-706ii5-4 C9KNWANXX_1_LYNX7-706ii5-4 C9KNWANXX_2_LYNX7-706ii5-4 C9KNWANXX_3_LYNX7-706ii5-4 C9KNWANXX_4_LYNX7-706ii5-4 C9KNWANXX_5_LYNX7-706ii5-4 CA3D2ANXX_3_LYNX7-706ii5-4 CALHGANXX_6_LYNX7-706ii5-4 CALHGANXX_7_LYNX7-706ii5-4 CALHGANXX_8_LYNX7-706ii5-4)
	for i in ${ARRAY[@]}
	do
	echo $i
	zcat ${i}_1.fastq.gz | wc -l | awk '{print $1/4}' > ${BARCODEID["${i}"]}_${i}.borrar1.rawseq
	zcat ${i}_2.fastq.gz | wc -l | awk '{print $1/4}' > ${BARCODEID["${i}"]}_${i}.borrar2.rawseq
	done
	cat "${sample}"*.borrar1.rawseq | awk '{sum+=$1}END{print sum}' > "${sample}"_R1.rawseq
	cat "${sample}"*.borrar2.rawseq | awk '{sum+=$1}END{print sum}' > "${sample}"_R2.rawseq

178039292

--------------------------------------------------

LYNX_14:

What they say & is equal to the empirical result:
136780000

--------------------------------------------------

Como vemos las estadísticas son la suma de LYNX_14 más los nuevos lanes de LYNX_17. 

Esto se ha podido ocasionar por un error al generar los excel file en la parte de bioinformática. Si es así, SOLO los lanes nuevos deberían ser suficientes para cubrir lo que nosotros habíamos pedido. Por tanto hago la cuenta de cuantas lecturas tengo para estos lanes nuevos y comparo con el número de bases que pedí.

# I want to know if the reads that they provide with the new lanes are what we ask for or they sum up those that were already delivered with LYNX_14

ARRAY_NEW_LYNX_17=(CALHGANXX_6_LYNX7-604ii5-2 CALHGANXX_6_LYNX7-625ii5-2 CALHGANXX_6_LYNX7-693ii5-4 CALHGANXX_6_LYNX7-695ii5-4 CALHGANXX_6_LYNX7-700ii5-4  CALHGANXX_6_LYNX7-702ii5-4 CALHGANXX_6_LYNX7-708ii5-4 CALHGANXX_6_LYNX7-709ii5-4 CALHGANXX_7_LYNX7-604ii5-2 CALHGANXX_7_LYNX7-625ii5-2  CALHGANXX_7_LYNX7-693ii5-4 CALHGANXX_7_LYNX7-695ii5-4 CALHGANXX_7_LYNX7-700ii5-4 CALHGANXX_7_LYNX7-702ii5-4  CALHGANXX_7_LYNX7-708ii5-4 CALHGANXX_7_LYNX7-709ii5-4 CALHGANXX_8_LYNX7-604ii5-2 CALHGANXX_8_LYNX7-625ii5-2 CALHGANXX_8_LYNX7-693ii5-4  CALHGANXX_8_LYNX7-695ii5-4 CALHGANXX_8_LYNX7-700ii5-4 CALHGANXX_8_LYNX7-702ii5-4  CALHGANXX_8_LYNX7-708ii5-4  CALHGANXX_8_LYNX7-709ii5-4)

for i in "${ARRAY_NEW_LYNX_17[@]}"
do
echo $i
zcat ${i}_1.fastq.gz | wc -l | awk '{print $1/4}' > new/${BARCODEID["${i}"]}_${i}.borrar1.rawseq
zcat ${i}_2.fastq.gz | wc -l | awk '{print $1/4}' > new/${BARCODEID["${i}"]}_${i}.borrar2.rawseq
done

cd new/

for sample in "${SAMPLESLIST[@]}"
do
cat "${sample}"*.borrar1.rawseq | awk '{sum+=$1}END{print sum}' > "${sample}"_R1.rawseq
cat "${sample}"*.borrar2.rawseq | awk '{sum+=$1}END{print sum}' > "${sample}"_R2.rawseq
done

for sample in "${SAMPLESLIST[@]}"
do
echo $sample
cat "$sample"_R1.rawseq
done


We have ask for:

sample	target bases
CR3_S77	4922578951
VP1_S76	5575741044
CR1_S58	6052871655
GA2_S71	6267804197
CR4_S55	6413810953
EBD14096_S75	9180590074
SP1_S72	10316490746
AB1_S74	11205068496
EX2_S73	23714802169



for i in $(ls *rawseq | cut -d"_" -f 5-6 | sort | uniq )
do
cat *"${i}"*.borrar1.rawseq | awk '{sum+=$1}END{print sum}' > "${i}"_R1.rawseq
cat *"${i}"*.borrar2.rawseq | awk '{sum+=$1}END{print sum}' > "${i}"_R2.rawseq
done

for i in $(ls *R2.rawseq)
do
echo $i
cat "$i"
done


LANE                  TARGET_READS(M)  NUMBER_BASES (GB)
------------------------------------------------------
C9KH6ANXX_5_R1rawseq	130              16 
C9KN6ANXX_7_R1rawseq	99               12
C9KNWANXX_1_R1rawseq	130              16
C9KNWANXX_2_R1rawseq	124              15
C9KNWANXX_3_R1rawseq	128              16
C9KNWANXX_4_R1rawseq	128              16
C9KNWANXX_5_R1rawseq	130              16
CA3D2ANXX_3_R1rawseq	100              12
-------------------------------------------------------
CALHGANXX_6_R1rawseq	141              17
CALHGANXX_7_R1rawseq	141              17
CALHGANXX_8_R1rawseq	142              17



Number of reads that we expect: 222 M
Each lane of the HS2000 2x100bp produces 28Gb of sequence







